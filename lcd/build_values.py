#!/usr/bin/env python3

from sys import argv
import numpy

MIN_VALUE = 1
MAX_VALUE = 255

def getPolynomial(lookup, deg):
    nRow = lookup.shape[0]
    pol = numpy.polyfit(numpy.arange(0, nRow), lookup, deg)
    return pol


def buildLookup(polynomial, lookup):
    # Find x1 and x2 such as f(x1) = 5 and f(x2) = 255 in order to have an interval
    polynomial[2] = MIN_VALUE # Constant part of the polynomial

    x1 = 0
    x2 = (numpy.poly1d(polynomial) - MAX_VALUE).roots[1]

    step = (x2 - x1) / 16

    # 0.01 because arange excludes right member
    lookup[:] = numpy.polyval(
        polynomial, numpy.arange(0, x2 + 0.01, step, float))


def writeLookup(filename, lookup):
    f = open(filename, 'wb')
    ba = bytearray([n for n in lookup.flat])
    f.write(ba)


def printLookup(lookup):
    print('// AUTO-GENERATED BY build_values.py\n')
    print('uint8_t lcd_brightness_values[17] = {\n')
    for i in range(17):
        print('    ' + str(lookup.flat[i]) + ',')
    print('};\n')


if __name__ == '__main__':
    # Extracted from address of lcd.skprx (3.60) at address 0x1BA0
    lookup = numpy.array([31, 37, 43, 50, 58, 67, 77, 88,
                          100, 114,	129, 147, 166, 182, 203, 227, 255])

    polynomial = getPolynomial(lookup, 2)
    buildLookup(polynomial, lookup)
    lookup = lookup.astype(int)

    printLookup(lookup)
